
@inherits LayoutComponentBase

@inject IJSRuntime JS
 @inject NavigationManager Navigation
@*<h3>EditLayout</h3>*@

 <style type="text/css">

            body {

                background: url('img/bg4.jpg') no-repeat;

                /*  background-image: url(bg.jpg);*/
                background-size:cover;

                background-repeat:no-repeat;

            }

    </style>

<MudThemeProvider />
<MudDialogProvider
    FullWidth="true"
    MaxWidth="MaxWidth.Medium"
    CloseButton="true"
    DisableBackdropClick="true"
   
    Position="DialogPosition.Center"
    CloseOnEscapeKey="true"

/>
<MudSnackbarProvider />
<MudLayout>
    <MudAppBar Dense="true"  Style="@($"color:{Colors.Grey.Darken3};z-index: auto; background:{Colors.Shades.White};")" Elevation="1" >
    <MudStack Justify="Justify.Center">
        <MudIconButton Icon="@Icons.Outlined.Home" Href="/"></MudIconButton>
    </MudStack>
        <MudSpacer />
        <MudStack Row="true" AlignItems="AlignItems.Center" Justify="Justify.FlexEnd" Spacing="5">
            <MudSelect Dense="true" Variant="Variant.Outlined" Margin="Margin.Dense"  
                       Style="width:280px;color:white;background-color:rgba(255,255,255,0.7)" T="string" ValueChanged="OnSelectedValuesChanged" Label="个性化背景"  >
                @for( int k=0;k<BackgroundEnum.Length;k++ )
                {
                    var item = BackgroundEnum[k];
                    var sss = k;
                    <MudSelectItem Value="@item">@($"第{sss+1}张图") </MudSelectItem>
                }
            </MudSelect>
            <LoginDisplay />
        </MudStack>
    </MudAppBar>
    <MudMainContent>
       <MudContainer>
           
            @Body
      
       </MudContainer>
    </MudMainContent>
</MudLayout>

@code {


    public string[] BackgroundEnum { set; get; } = new[]
    {
        "img/bg1.jpg",
        "img/bg2.jpg",
        "img/bg3.jpg",
        "img/bg4.jpg",
        "img/bg5.jpg"
    };

    protected override Task OnInitializedAsync()
    {
        JS.InvokeVoidAsync("JSMethods.setbackground","img/bg4.jpg");
        return base.OnInitializedAsync();
    }
    protected Task OnSelectedValuesChanged(string img)
    {
        JS.InvokeVoidAsync("JSMethods.setbackground",img);
        return Task.CompletedTask;
    }



}

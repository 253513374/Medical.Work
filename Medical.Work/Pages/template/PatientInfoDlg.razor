


<style>
    .is-right {
        text-align: right;
    }
</style>
<div>
    <ValidateForm Model="@patientInfo">

        <Row ItemsPerRow="ItemsPerRow.Two" RowType="RowType.Inline">

            <BootstrapInput @bind-Value="@patientInfo.Medicalrecordnumber" />
            <BootstrapInput @bind-Value="@patientInfo.Department" />
            <BootstrapInput @bind-Value="@patientInfo.Username" />
            <Select @bind-Value="@patientInfo.Gender" />

          

         
        </Row>

            <div class=" row form-inline" style="margin: 15px;" >
                <div class="col-6 row" style="padding-right:25px;">
                    <div class="col-6" style="padding:initial">

                        <div class="input-group flex-nowrap">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="addon-wrapping">年龄(岁)</span>
                            </div>
                            <input type="text" class="form-control"  @bind-value="@patientInfo.AGE" placeholder="" aria-label="" aria-describedby="addon-wrapping">
                        </div>

                      
                    </div>
                    <div class="col-3" style="padding:initial">

                        <div class="input-group flex-nowrap">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="addon-wrapping">月</span>
                            </div>
                            <input type="text" class="form-control"  @bind-value="@patientInfo.MonthAGE" placeholder="" aria-label="" aria-describedby="addon-wrapping">
                        </div>

                      
                    </div>
                    <div class="col-3" style="padding:initial">

                        <div class="input-group flex-nowrap">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="addon-wrapping">日</span>
                            </div>
                            <input type="text" class="form-control"  @bind-value="@patientInfo.DayAGE" placeholder="" aria-label="" aria-describedby="addon-wrapping">
                        </div>

                      
                    </div>
                </div>

                <div class="col-6 row form-inline" style="padding-left:55px;">
                    <div class="col-6 form-inline" style="padding:initial">
                        @*<BootstrapInput @bind-Value="@patientInfo.BW" />*@
                        <div class="input-group flex-nowrap">
                            <div class="input-group-prepend">
                                <span class="input-group-text" id="addon-wrapping">体重</span>
                            </div>
                            <input type="text" class="form-control"  @bind-value="@patientInfo.BW" placeholder="" aria-label="" aria-describedby="addon-wrapping">
                        </div>
                    </div>
                    <div class="col-3" style="padding:initial">
                        <Select @bind-Value="@patientInfo.BWWeight" ShowLabel="false" />
                    </div>
                    <div class="col-3" style="padding:initial">
                        <Select Items="@Items" Value="@patientInfo.IsBWType" TValue="String" ShowLabel="false"></Select>
                    </div>
                   
                   
                  
                </div>
            </div>


           
       
     
        <Row ItemsPerRow="ItemsPerRow.Two" RowType="RowType.Inline">
            <Row  ItemsPerRow="ItemsPerRow.Three" RowType="RowType.Normal">
              
            </Row>
            <Row  ItemsPerRow="ItemsPerRow.Three" RowType="RowType.Normal">
             
            </Row>
        </Row>
    


        <Row RowType="RowType.Inline" ItemsPerRow="ItemsPerRow.Four">
            <Row ColSpan="4" ItemsPerRow="ItemsPerRow.Three">
                <BootstrapInput @bind-Value="@patientInfo.HEI" />
                <BootstrapInput @bind-Value="@patientInfo.BMI" @onclick="OnGetBMI" />
                <BootstrapInput @bind-Value="@patientInfo.BSA" @onclick="OnGetBsa" />
            </Row>
            <Row ColSpan="4" ItemsPerRow="ItemsPerRow.Two">
                <DateTimePicker @bind-Value="@patientInfo.Transplantationtime" ShowLabel="true" Placement="Placement.Auto" />
                <Select @bind-Value="@patientInfo.Transplantationtype" />
            </Row>
            <Row ColSpan="4" ItemsPerRow="ItemsPerRow.Two">
                <DateTimePicker @bind-Value="@patientInfo.Admissiontime" ShowLabel="true" Placement="Placement.Auto" />
                <DateTimePicker @bind-Value="@patientInfo.Dischargetime" ShowLabel="true" Placement="Placement.Auto" />
            </Row>
            <Row ColSpan="4" ItemsPerRow="ItemsPerRow.Three">
                <BootstrapInput @bind-Value="@patientInfo.GCS" />
                <BootstrapInput @bind-Value="@patientInfo.SOFA" />
                <BootstrapInput @bind-Value="@patientInfo.APACHEⅡ" />
            </Row>

        </Row>
    </ValidateForm>

</div>
@code {


    [CascadingParameter(Name = "BodyContext")]
    public object? objects { set; get; }

    [Parameter]
    public PatientInfo patientInfo { set; get; }


    [Parameter]
    public EventCallback<PatientInfo> OnEventCallback { set; get; }


    private int AGEDiffer { set; get; }

  


    private IEnumerable<SelectedItem> Items { get; set; } = new SelectedItem[]
       {
          
            new SelectedItem("1", "估算") ,
            new SelectedItem("2", "称重"){ Active = true }
       };



    protected override Task OnInitializedAsync()
    {
        patientInfo = objects as PatientInfo;
        return base.OnInitializedAsync();
    }

    private Task OnItemChanged(CheckboxState state, SelectedItem value)
    {
        patientInfo.IsBWType = value.Text;
        //BinderLog?.Log($"Selected Value: {value.Text}");
        return Task.CompletedTask;
    }
    private Task DateTimeValueChanged(DateTime? d)
    {
        //patientInfo.AGE = d.Value;
       // AGEDiffer = DateTime.Now.Year - d.Value.Year;
        return Task.CompletedTask;
    }


    private Task OnGetBMI()
    {
        patientInfo.BMI = PatientInfoExtend.GetBMI(patientInfo);
        return Task.CompletedTask;
    }
    private Task OnGetBsa()
    {
        patientInfo.BSA = PatientInfoExtend.GetBsa(patientInfo);
        return Task.CompletedTask;
    }

}

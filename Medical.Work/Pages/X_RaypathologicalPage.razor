


@page "/X_RaypathologicalPage"
@using System.Reflection

@inject DialogService? Dialogservice
@inject IDbContextFactory<MedicalDbContext> ContextFactor
@inject UserManager<IdentityUser> Usermanager



<div class="divtop d-flex  align-items-center">

    <div class="  w-100 ">
        <Card>
            <CardHeader>查询条件</CardHeader>
            <CardBody>
                <Row RowType="RowType.Normal" ItemsPerRow="ItemsPerRow.Two">

                    <Search IgnoreCase="true" IsLikeMatch="true" @bind-Value="@Querywhere" placeholder="请输入关键信息..." OnSearch="@(s => OnSearch())"></Search>

                    <button class="createbut fa fa-plus " @onclick="@OnShowDlg"></button>
                </Row>
            </CardBody>
        </Card>



    </div>
</div>


<div class="w-100">
    <Card>
        <CardHeader>查询结果</CardHeader>
        <CardBody>
            <Table TItem="X_raypathological" ShowLoading="true" Items="@x_Raypathologicals" IsPagination="true" IsStriped="true" IsBordered="true"
                   ShowToolbar="true" ShowAddButton="false" ShowEditButton="false"
                   ShowDeleteButton="false" OnQueryAsync="@OnQueryPageAsync" IsAutoRefresh="true"
                   ShowExtendButtons="true" ShowColumnList="true" AutoGenerateColumns="true">
                <RowButtonTemplate>
                  @*  <TableCellButton Size="Size.ExtraSmall" Color="Color.Primary" Icon="fa fa-edit" Text="明细" OnClickCallback="@(() => OnRowDetailedClick(context))" />*@
                    <TableCellButton Size="Size.ExtraSmall" Color="Color.Success" Icon="fa fa-edit" Text="删除" OnClickCallback="@(() => Ondel(context))" />
                </RowButtonTemplate>
            </Table>
        </CardBody>
    </Card>
          

</div>

<Message @ref="MessageElement" />







@code {

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }

    [Inject]
    private SwalService? SwalService { get; set; }

    private async Task OnRowDetailedClick(object obj, int typeofint)
    {

    }

   

    private async Task Ondel(X_raypathological  myobject)
    {
        var op = new SwalOption()
        {
            Title = "警告",
            Content = "数据删除不可再恢复，是否确定删除？",
            IsConfirm = true,
            Category = SwalCategory.Warning
        };
        var re = await SwalService.ShowModal(op);
        if (re)
        {

            using ( var context = ContextFactor.CreateDbContext())
            {
                context.X_raypathologicals.Remove(myobject);
                var  ok =  context.SaveChanges();
                if(ok >0)
                {
                    x_Raypathologicals.Remove(myobject);
                    StateHasChanged();
                }
                else{
                    ShowColorMessage(Color.Warning, "数据删除失败", MessageElement);

                }
            }
        }
        return;
    }
}

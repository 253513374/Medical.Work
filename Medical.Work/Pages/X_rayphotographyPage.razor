


@page "/X_rayphotographyPage"
@using System.Reflection

@inject DialogService? Dialogservice 
@inject IDbContextFactory<MedicalDbContext> ContextFactor
@inject UserManager<IdentityUser> Usermanager

<div class="marginlr">
    <div class=" mt-5 d-flex justify-content-between">
        <Button style="width:220px;" OnClick="@(s=>OnShowX_rayDialog1())" Size="Size.ExtraLarge" IsOutline="true" Color="Color.Info">影像学检查</Button>
        <Button style="width:220px;" OnClick="@(s=>OnShowX_rayDialog2())" Size="Size.ExtraLarge" IsOutline="true" Color="Color.Info">纤维支气管镜检查</Button>
        <Button style="width:220px;" OnClick="@(s=>OnShowX_rayDialog3())" Size="Size.ExtraLarge" IsOutline="true" Color="Color.Info">病理检查</Button>

    </div>
    <div class="mt-5">
        <Row RowType="RowType.FormRow" ItemsPerRow="ItemsPerRow.Two">

            <BootstrapInput @bind-Value="@Querywhere" placeholder="请输入名称或者病历号..."></BootstrapInput>
            <Button Color="Color.Primary" ButtonStyle="ButtonStyle.Round" IsOutline="true" @onclick="@OnSearch"> 查 询 </Button>
        </Row>
    </div>

    <div class="mt-5">

        <Row RowType="RowType.FormRow" ItemsPerRow="ItemsPerRow.Three">
            <Select @bind-Value="@SelectTable" OnSelectedItemChanged="OnSelectTableChanged">
                <Options>
                    <SelectOption Text="影像学检查" Value="1"></SelectOption>
                    <SelectOption Text="纤维支气管镜检查" Value="2"></SelectOption>
                    <SelectOption Text="病理检查" Value="3"></SelectOption>
                </Options>

            </Select>
        </Row>
        @switch (SelectTable)
        {
            case 1:
                <Table TItem="X_rayImaging" ShowLoading="true" Items="@X_RayImagings" IsPagination="true" IsStriped="true" IsBordered="true" IsMultipleSelect="true"
                       ShowToolbar="true" ShowAddButton="false" ShowEditButton="false" ShowDeleteButton="false"
                       ShowExtendButtons="true" ShowColumnList="true" AutoGenerateColumns="true">
                    <RowButtonTemplate>
                        <TableCellButton Size="Size.ExtraSmall" Color="Color.Primary" Icon="fa fa-edit" Text="明细" OnClickCallback="@(() => OnRowDetailedClick(context,1))" />
                        <TableCellButton Size="Size.ExtraSmall" Color="Color.Success" Icon="fa fa-edit" Text="编辑" OnClickCallback="@(() => OnRowEditClick(context,1))" />
                    </RowButtonTemplate>
                </Table>
                break;
            case 2:
                <Table TItem="X_raybronchoscopy" ShowLoading="true" Items="@x_Raybronchoscopies" IsPagination="true" IsStriped="true" IsBordered="true" IsMultipleSelect="true"
                       ShowToolbar="true" ShowAddButton="false" ShowEditButton="false" ShowDeleteButton="false"
                       ShowExtendButtons="true" ShowColumnList="true" AutoGenerateColumns="true">
                    <RowButtonTemplate>
                        <TableCellButton Size="Size.ExtraSmall" Color="Color.Primary" Icon="fa fa-edit" Text="明细" OnClickCallback="@(() => OnRowDetailedClick(context,2))" />
                        <TableCellButton Size="Size.ExtraSmall" Color="Color.Success" Icon="fa fa-edit" Text="编辑" OnClickCallback="@(() => OnRowEditClick(context,2))" />
                    </RowButtonTemplate>
                </Table>
                break;
            case 3:
                <Table TItem="X_raypathological" ShowLoading="true" Items="@X_Raypathologicals" IsPagination="true" IsStriped="true" IsBordered="true" IsMultipleSelect="true"
                       ShowToolbar="true" ShowAddButton="false" ShowEditButton="false" ShowDeleteButton="false"
                       ShowExtendButtons="true" ShowColumnList="true" AutoGenerateColumns="true">
                    <RowButtonTemplate>
                        <TableCellButton Size="Size.ExtraSmall" Color="Color.Primary" Icon="fa fa-edit" Text="明细" OnClickCallback="@(() => OnRowDetailedClick(context,3))" />
                        <TableCellButton Size="Size.ExtraSmall" Color="Color.Success" Icon="fa fa-edit" Text="编辑" OnClickCallback="@(() => OnRowEditClick(context,3))" />
                    </RowButtonTemplate>
                </Table>
                break;
            default:
                break;
        }

    </div>
    <Message @ref="MessageElement" />
</div>








@code {

    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }


    private async Task OnRowEditClick(object obj,int typeofint)
    {
        if (typeofint == 1)  await EditX_Raydata(obj as X_rayImaging);

        if (typeofint == 2) await EditX_Raydata(obj as X_raybronchoscopy);

        if (typeofint == 3) await EditX_Raydata(obj as X_raypathological);


    }
    private async Task OnRowDetailedClick(object obj, int typeofint)
    {

    }

    private async Task EditX_Raydata(X_raybronchoscopy x_Raybronchoscopy)
    {
        return ;
    }
    private async Task EditX_Raydata(X_rayImaging  x_RayImaging)
    {
        return ;
    }
    private async Task EditX_Raydata(X_raypathological  x_Raypathological)
    {
        return ;
    }
}

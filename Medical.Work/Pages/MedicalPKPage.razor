
@page "/MedicalPKPage"

@page "/MedicalPKPage/{Text}/{Name?}"

@inject IDbContextFactory<MedicalDbContext> contextFactory
@inject NavigationManager navigationManager


<div class=" divtop  w-100 d-flex align-items-center">
    <div class="marginlr w-100">
        <Card>
            <CardHeader>
                查询条件
            </CardHeader>
            <CardBody>
                <Row ItemsPerRow="ItemsPerRow.Two" RowType="RowType.Normal">
                    <Search @bind-Value="@Querywhere" @onclick="@(s=>OnQuerywhere())"></Search>
                    <button class="createbut fa fa-plus" @onclick="@(()=>OnShowDlg(null))"></button>
                    <button class="createbut fa fa-plus" @onclick="@(()=>OnIsOpenDrawer(null))"></button>
                </Row>

                
            </CardBody>
        </Card>

    </div>
</div>
<div class="marginlr pt-3">
    <Card>
        <CardHeader>
            查询结果
        </CardHeader>
        <CardBody>
            <Table TItem="MedicalPK" ShowLoading="true" HeaderStyle="TableHeaderStyle.Light" IsPagination="true"
                   IsStriped="true" IsBordered="true" IsMultipleSelect="false" AllowResizing="true"
                   ShowToolbar="true" ShowAddButton="false" ShowEditButton="false" ShowDeleteButton="false"
                   ShowExtendButtons="true" ShowColumnList="true" OnQueryAsync="@OnQueryAsync" IsAutoRefresh="true">
                @*/*药品通用名，溶媒（如0.9% 氯化钠100ml）,单次剂量，给药频率，给药途径，开始时间，截止时间，公斤体质量日剂量，厂家类型*/*@
                <TableColumns>
                    <TableColumn @bind-Field="@context.DrugsNmae"></TableColumn>
                    <TableColumn @bind-Field="@context.DrugSolvent"></TableColumn>
                    <TableColumn @bind-Field="@context.SolventToDosage"></TableColumn>
                    <TableColumn @bind-Field="@context.Drugdosage"></TableColumn>
                    <TableColumn @bind-Field="@context.DrugNCount"></TableColumn>
                    <TableColumn @bind-Field="@context.DrugdosageRoute"></TableColumn>
                    <TableColumn @bind-Field="@context.FirstTime"></TableColumn>
                    <TableColumn @bind-Field="@context.LasttTime"></TableColumn>
                    <TableColumn @bind-Field="@context.AMTsingledose"></TableColumn>
                    <TableColumn @bind-Field="@context.Manufacturertype"></TableColumn>
                </TableColumns>

                <RowButtonTemplate>
                    <TableCellButton Size="Size.ExtraSmall" Color="Color.Info" Icon="fa fa-edit" Text=" 操 作 "  OnClickCallback="@(()=>OnIsOpenDrawer(context))" />
                </RowButtonTemplate>
            </Table>
        </CardBody>
    </Card>

    @*@if (medicalPKs is not null && medicalPKs.Count > 0)
        {

        }*@
<Drawer Placement="Placement.Bottom" IsBackdrop="true"   IsOpen="@IsOpenDrawer" >
    <div class="d-flex justify-content-center align-items-center flex-column" style="height: 290px;">
        <p>抽屉内布局、组件等完全可以自定义</p>
        <button type="button" class="btn btn-primary" @onclick="@(e => IsOpenDrawer = false)">关闭抽屉</button>
    </div>
</Drawer>
</div>




@code {

    private List<MedicalPK> medicalPK_s { set; get; } = new();

    private bool IsOpenDrawer { set; get; }

    [Parameter]
    public string Text { get; set; }

    [Parameter]
    public string Name { get; set; }

  

    protected override async Task OnParametersSetAsync()
    {
        if (Text is not null or "")
        {
            // Task.Run(()=> { ); });
            var obj = new MedicalPK();
            obj.Medicalrecordnumber = Text;
            obj.Username = Name;
            await OnShowDlg(obj);
        }
        return;
    }


    protected override async Task OnInitializedAsync()
    {
        await OnQuerywhere();
        return;
        //return base.OnInitializedAsync();
    }

   

    private Task OnIsOpenDrawer(MedicalPK medical)
    {
        IsOpenDrawer = true;
        //var url = $"MedicalPKDetailsPage/{medical.ID}";
        //navigationManager.NavigateTo(url);
        return Task.CompletedTask; 
    }


    private Task<QueryData<MedicalPK>> OnQueryAsync(QueryPageOptions options)
    {
        // 内存分页
        var items = medicalPK_s.Skip((options.PageIndex - 1) * options.PageItems).Take(options.PageItems).ToList();

        return Task.FromResult(new QueryData<MedicalPK>()
        {
            Items = items,
            TotalCount = medicalPK_s.Count
            // IsSearch = true
        });
    }
}

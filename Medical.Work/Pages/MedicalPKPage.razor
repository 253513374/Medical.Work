
@page "/MedicalPKPage"

@inject IDbContextFactory<MedicalDbContext> contextFactory
@inject NavigationManager navigationManager


<div class=" divtop  w-100 d-flex align-items-center">
    <div class="marginlr w-100">
        <Row ItemsPerRow="ItemsPerRow.Two">
            <Search @bind-Value="@Querywhere" @onclick="@(s=>OnQuerywhere())"></Search>
            <Button @onclick="@OnShowDlg">给药方案</Button>
        </Row>
    </div>
</div>
<div class="marginlr pt-3">

    <Table TItem="MedicalPK" ShowLoading="true" HeaderStyle="TableHeaderStyle.Light" Items="@medicalPK_s"
           IsPagination="true" IsStriped="true" IsBordered="true" IsMultipleSelect="false"
           ShowToolbar="true" ShowAddButton="false" ShowEditButton="false" ShowDeleteButton="false"
           ShowExtendButtons="true" ShowColumnList="true">
        @*//*药品通用名，溶媒（如0.9% 氯化钠100ml）,单次剂量，给药频率，给药途径，开始时间，截止时间，公斤体质量日剂量，厂家类型*/*@
        <TableColumns>
            <TableColumn @bind-Field="@context.DrugsNmae"></TableColumn>
            <TableColumn @bind-Field="@context.DrugSolvent"></TableColumn>
            <TableColumn @bind-Field="@context.SolventToDosage"></TableColumn>
            <TableColumn @bind-Field="@context.Drugdosage"></TableColumn>
            <TableColumn @bind-Field="@context.DrugNCount"></TableColumn>
            <TableColumn @bind-Field="@context.DrugdosageRoute"></TableColumn>
            <TableColumn @bind-Field="@context.FirstTime"></TableColumn>
            <TableColumn @bind-Field="@context.LasttTime"></TableColumn>
            <TableColumn @bind-Field="@context.AMTsingledose"></TableColumn>
            <TableColumn @bind-Field="@context.Manufacturertype"></TableColumn>
        </TableColumns>

        <RowButtonTemplate>
            <TableCellButton Size="Size.Medium" Color="Color.Info" Icon="fa fa-edit" Text=" 操 作 " OnClickCallback="@(() => OnRowEditClick(context))" />
        </RowButtonTemplate>
    </Table>
    @*@if (medicalPKs is not null && medicalPKs.Count > 0)
    {

    }*@

</div>

    @code {

        private List<MedicalPK> medicalPK_s { set; get; } = new();


        protected override async Task OnInitializedAsync()
        {
            await OnQuerywhere();
            return;
            //return base.OnInitializedAsync();
        }
        protected override  async Task OnAfterRenderAsync(bool firstRender)
        {
            if (firstRender)
            {
                //medicalPKs = await GetmedicalPK();
                //StateHasChanged();
                // await OnQuerywhere();
            }
            return;// base.OnAfterRenderAsync(firstRender);
        }

        //{
        //    if(firstRender)
        //    {

        //        StateHasChanged();
        //    }
        //    base.OnAfterRender(firstRender);
        //}

}
